/*const testArr = [];
testArr[0] = "start";
testArr[1] = 2;
testArr[2] = 5 + 12;
testArr[testArr.length] = 30;
//console.log(testArr);

//console.log(testArr[testArr.length - 1]);
const location = [
  [100, 200],
  [105, 205],
  [110, 190],
];
for (const point of location) {
  for (const coord of point) {
    console.log(coord);
  }
}
for (const pointIndex in location) {
  console.log(location[pointIndex]);
  for (const coordIndex in location[pointIndex]) {
    console.log(location[pointIndex][coordIndex]);
  }
}
//Деструктуризація
//const [loc1, loc2, loc3] = location;
//console.log(loc1, loc2, loc3);
const [loc1, ...rest] = location;
//console.log(loc1, rest);

function sumAllNum(...nums) {
  let sum = 0;
  for (const n of nums) {
    sum += n;
  }
  return [sum, nums.length];
}
const [sum, numsLength] = sumAllNum(
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16
);
//console.log(sum, numsLength);

function printFullName([name, surname, lastname, ...arg]) {
  return `${name} ${surname} ${lastname} ${
    arg.length ? `(${arg.toString()})` : ""
  }`;
}
//console.log(printFullName(["Ivan", "Ivanenko", "Ivanov", "User", "18"]));
*/

// Завдання 1: Дано масив, використовуючи цикл "for in" виведіть на консоль всі індекси цього масиву
function printIndexes(array) {
  // Проходимося по всіх індексах масиву
  for (const printIndexes in array) {
    console.log([printIndexes]);
  }

  // Виводимо кожен індекс на консоль
}

console.log("Завдання 1 ====================================");
printIndexes([10, 22, 33, 44, 55]);
// Виведе
// 0
// 1
// 2
// 3
// 4

// Завдання 2: Дано масив, використовуючи цикл "for in" знайдіть суму всіх елементів масиву
function sumArray(array) {
  // Ініціалізуємо змінну для зберігання суми
  let sum = 0;

  for (const n in array) {
    sum += array[n];
  }
  return sum;

  // Додаємо кожен елемент до загальної суми
  // Повертаємо суму
}

console.log("Завдання 2 ====================================");
console.log("sumArray([1, 2, 3, 4, 5])", sumArray([1, 2, 3, 4, 5])); // Виведе 15

// Завдання 3: Дано масив, використовуючи цикл "for of" знайдіть добуток всіх елементів масиву
function multiplyArray(array) {
  // Ініціалізуємо змінну для зберігання добутку
  let multiply = 1;
  // Проходимося по всіх значеннях масиву
  for (const n of array) {
    multiply *= n;
  }
  return multiply;
  // Множимо кожен елемент на загальний добуток
  // Повертаємо добуток
}

console.log("Завдання 3 ====================================");
console.log("multiplyArray([1, 2, 3, 4, 5])", multiplyArray([1, 2, 3, 4, 5])); // Виведе 120

// Завдання 4: Дано масив рядків. Видаліть третій елемент масиву та перетворіть в рядок за допомогою методу toString(). Результат виведіть на консоль.
function modifyArray(array) {
  // Видаляємо третій елемент масиву
  delete array[2];
  // Виводимо масив перетворений в рядок
  console.log(array.toString());
}

console.log("Завдання 4 ====================================");
modifyArray([1, "two", 3, "four", 5]); // Виведе 1,two,,four,5

// Завдання 5: Дано масив рядків. За допомогою циклу for переберіть масив, виведіть кожен елемент на консоль у верхньому регістрі.
function printUppercase(array) {
  // Проходимося по всіх елементах масиву
  for (const a of array) {
    console.log(a.toUpperCase());
  }

  // Перетворюємо кожен елемент в верхній регістр та виводимо на консоль
}

console.log("Завдання 5 ====================================");
printUppercase(["one", "two", "three"]); // Виведе ONE TWO THREE

// Завдання 6: Функція приймає деструктуризований масив чисел де будe перший елемент та масив всіх інших.
// За допомогою циклу for переберіть масив, знайдіть мінімальне та максимальне значення. Результат виведіть на консоль.

// Маю 2 варіанти рішення:

function findMinMax([firstElement, ...restElements]) {
  // Ініціалізуємо змінні для мінімального та максимального значень, задаємо їм перше значення масиву
  let min = firstElement;
  let max = firstElement;
  // Перебираємо масив починаючи з другого елементу
  // Перевіряємо, чи поточний елемент менший за мінімальне значення
  for (let a = 0; a < restElements.length; a++) {
    if (restElements[a] < min) {
      min = restElements[a];
    }

    if (restElements[a] > max) {
      max = restElements[a];
    }
  }
  console.log("Min:", min, "Max:", max);
  // Якщо так, оновлюємо мінімальне значення
  // Перевіряємо, чи поточний елемент більший за максимальне значення
  // Якщо так, оновлюємо максимальне значення
  // Виводимо мінімальне та максимальне значення
}

function findMinMax([firstElement, ...restElements]) {
  // Ініціалізуємо змінні для мінімального та максимального значень, задаємо їм перше значення масиву
  let Min = firstElement;
  let Max = firstElement;
  // Перебираємо масив починаючи з другого елементу
  // Перевіряємо, чи поточний елемент менший за мінімальне значення
  for (const n in restElements) {
    if (restElements[n] < Min) {
      Min = restElements[n];
    }

    if (restElements[n] > Max) {
      Max = restElements[n];
    }
  }
  console.log("Min:", Min, "Max:", Max);
  // Якщо так, оновлюємо мінімальне значення
  // Перевіряємо, чи поточний елемент більший за максимальне значення
  // Якщо так, оновлюємо максимальне значення
  // Виводимо мінімальне та максимальне значення
}

console.log("Завдання 6 ====================================");
findMinMax([5, 2, 8, 1, 9, 3]); // Виведе Min: 1 Max: 9

// Завдання 7: Функція приймає масив рядків.
// Перетворіть масив в рядок за допомогою методу toString() та повторіть його 2 рази. Результат виведіть на консоль.
function printStrings(array) {
  // Перетворюємо масив в рядок і видаляемо пробіли та виводимо його на консоль
  //console.log(array.toString());
  let result = array.toString();
  let printStrings = result.repeat(2);
  console.log(printStrings);
}

console.log("Завдання 7 ====================================");
printStrings([1, "two", 3, "four", 5]); // 1,two,3,four,51,two,3,four,5

// Завдання 8: Функція приймає масив рядків.
// За допомогою методу toString() перетворіть масив в рядок, та виясніть чи є в цьому рядку підрядок subString .

function concatenateStrings(array, subString) {
  // Використовуємо метод toString() для перетворення масиву в рядок
  //Перевіряємо чи містить рядок підрядок
  // Виводимо результат
  let result = array.toString();

  console.log(result.includes(subString));
}

console.log("Завдання 8 ====================================");
concatenateStrings([1, "two", 3, "four", 5], "two"); // Виведе true

// Завдання 9: Функція приймає масив чисел.
// За допомогою циклу for-in переберіть масив, додайте до кожного елемента 10.
// Зберігайте результат в новому масиві. Результат виведіть на консоль.
function addTenToEach(array) {
  // Ініціалізуємо масив через конструктор з такою же кількістю елементів як в вхідному масиві для зберігання результату
  let list = Array(array.length);
  // Перебираємо масив за допомогою циклу for-in
  for (const n in array) {
    list[n] = array[n] + 10;
  }
  // Додаємо до поточного елемента 10 та додаємо результат в новий масив
  console.log(list);

  // Виводимо результат
}

console.log("Завдання 9 ====================================");
addTenToEach([5, 10, 15, 20]); // Виведе [15, 20, 25, 30]

// Виносимо варіанти в масив

// Завдання 10: Створити функцію, яка приймає масив чисел як аргумент.
function swapMinMax(array) {
  let result = array.reverse();

  console.log(result);
}

// Ініціалізуємо дві змінні (max і min) з першим елементом масиву. Ці змінні будуть використовуватися для зберігання максимального та мінімального значень в масиві.
// Ініціалізуємо дві змінні (maxIndex і minIndex) з нульового значення. Ці змінні будуть використовуватися для зберігання індексів максимального та мінімального значень в масиві.
// Використовуємо цикл for для ітерації по масиву. Починаємо з першого елемента (i = 0) і продовжуємо до останнього елемента масиву (i < array.length).
// Умова if перевіряє, чи є поточний елемент масиву більшим за поточне максимальне значення. Якщо це так, оновлюємо max з поточним елементом масиву та maxIndex з поточним індексом.
// Умова else if перевіряє, чи є поточний елемент масиву меншим за поточне мінімальне значення. Якщо це так, оновлюємо min з поточним елементом масиву та minIndex з поточним індексом.
// Застосовуємо деструктуризацію масиву для обміну місцями мінімального та максимального значення в масиві.
// Функція повертає масив, в якому мінімальне та максимальне значення обміняні місцями.

console.log("Завдання 10 ====================================");
// Виводимо в консоль результат виклику функції swapMinMax з масивом [1, 2, 3, 4, 5] як аргументом. Очікуємо бачити [5, 2, 3, 4, 1], оскільки максимальне та мінімальне значення обміняні місцями.
console.log(swapMinMax([1, 2, 3, 4, 5]));

// Завдання 11: Функція приймає масив чисел. Поверніть новий масив, який містить тільки парні числа з оригінального масиву.
function getEvenNumbers(arr) {
  // Створюємо пустий масив для зберігання результату
  let evenNumbers = Array();
  // Проходимо через кожен елемент вхідного масиву

  for (const i of arr) {
    if (arr[i] % 2 === 0) {
      evenNumbers.splice(i, 0, arr[i]);
    }
  }
  return evenNumbers;
  // Перевіряємо чи є число парним
  // Якщо так, додаємо його до масиву результату
  // Повертаємо масив результату
}
console.log("Завдання 11 ====================================");
console.log(getEvenNumbers([1, 2, 3, 4, 5, 6])); // Виведе [2, 4, 6]

// Завдання 12: Функція приймає масив чисел. Поверніть новий масив, в якому всі числа помножені на їх індекс.
function multiplyByIndex(arr) {
  // Створюємо пустий масив для зберігання результату
  let multiply = Array(arr.length);
  // Перебираємо масив за допомогою циклу for-in
  for (const n in arr) {
    multiply[n] = arr[n] * n;
  }

  console.log(multiply);

  // Проходимо через кожен елемент вхідного масиву
  // Помножуємо число на його індекс і додаємо до масиву результату
  // Повертаємо масив результату
}
console.log("Завдання 12 ====================================");
console.log(multiplyByIndex([1, 2, 3, 4, 5])); // Виведе [0, 2, 6, 12, 20]

// Завдання 13: Функція приймає масив чисел. Повертає новий масив, в якому всі числа більші за 10 замінені на рядок "Greater than 10", а решта чисел замінені на рядок "Less than or equal to 10".
function replaceNumbers(arr) {
  // Створюємо пустий масив для зберігання результату
  let list = [];
  // Проходимо через кожен елемент вхідного масиву
  // Перевіряємо, чи число більше за 10
  for (const j in arr) {
    if (arr[j] > 10) {
      list.splice(j, 0, "Greater than 10");
    }

    if (arr[j] <= 10) {
      list.splice(j, 0, "Less than or equal to 10");
    }
  }
  console.log(list);

  // Якщо число більше за 10, додаємо рядок "Greater than 10" до масиву результату
  // Якщо число менше або дорівнює 10, додаємо рядок "Less than or equal to 10" до масиву результату
  // Повертаємо масив результату
}

console.log("Завдання 13 ====================================");
console.log(replaceNumbers([5, 10, 15, 20])); // Виведе ["Less than or equal to 10", "Less than or equal to 10", "Greater than 10", "Greater than 10"]
